from rest_framework import serializers, viewsetsfrom rest_framework import serializers, viewsetsfrom django_filters.rest_framework import DjangoFilterBackendfrom reserva.filters.filters import ReservaDetalleFilterfrom rest_framework import statusfrom rest_framework.response import Responseimport logginglog = logging.getLogger(__name__)from rest_framework import authentication, permissionsfrom django.shortcuts import get_object_or_404from reserva.models.detalle_reserva import DetalleReservafrom catalogo.models.cancha import Canchafrom reserva.models.reserva import Reservafrom catalogo.models.implementos_dep import Implementoclass DetalleReservaSerializer(serializers.ModelSerializer):    class Meta:        model = DetalleReserva        fields = '__all__'class DetalleSaveSerializer(serializers.Serializer):    id = serializers.UUIDField(read_only=True)    # codigo_reserva = serializers.CharField(max_length=10)    # fecha_inicio = serializers.DateTimeField()    fecha_inicio = serializers.DateTimeField()    fecha_fin = serializers.DateTimeField()    cancha = serializers.ListField(child=serializers.CharField())    implementos = serializers.ListField(child=serializers.CharField())    reserva = serializers.PrimaryKeyRelatedField(allow_null=True, queryset=Reserva.objects.all(), required=False)def generaCeros(codigo):    codigoInicial = "0000"    codigoInicial = str(codigoInicial)    if codigo < 9:        codigoInicial = codigoInicial    elif codigo > 9 and codigo <= 99:        codigoInicial = "000"    elif codigo > 99 and codigo <= 999:        codigoInicial = "00"    elif codigo > 999 and codigo <= 9999:        codigoInicial = "0"    elif codigo > 9999 and codigo <= 99999:        codigoInicial = ""    return codigoInicialdef generaCodigo(reserva):    codigo = Reserva.objects.filter(id=reserva).count()    if codigo == None:        codigo = 1    codigo = codigo + 1    codigo = generaCeros(codigo) + str(codigo)    print(codigo)    return codigoclass DetalleFilterReservaViewSet(viewsets.ModelViewSet):    queryset = DetalleReserva.objects.all()    serializer_class = DetalleReservaSerializer    filter_backend = DjangoFilterBackend    filter_class = ReservaDetalleFilterclass DetalleReservaViewSet(viewsets.ViewSet):    queryset = DetalleReserva.objects.all()    serializer_class = DetalleReservaSerializer    def list(self, request):        detalle_reserva = DetalleReserva.objects.all()        serializer = DetalleReservaSerializer(detalle_reserva, many=True, )        print(serializer)        return Response(serializer.data)    def retrieve(self, request, pk=None):        queryset = DetalleReserva.objects.all()        detalle_reserva = get_object_or_404(queryset, pk=pk)        serializer = DetalleReservaSerializer(detalle_reserva)        return Response(serializer.data)    def create(self, request):        serializer = DetalleSaveSerializer(data=request.data)        if serializer.is_valid():            # codigo_reserva = serializer.data['codigo_reserva']            fecha_inicio = serializer.data['fecha_inicio']            fecha_fin = serializer.data['fecha_fin']            cancha = serializer.data['cancha']            implementos = serializer.data['implementos']            reserva = request.data['reserva']            costo_cancha_res= 0.00            costo_implemento_res = 0.00            for implemento in implementos:                implementoo=Implemento.objects.get(id=implemento)                implemento_res = DetalleReserva(                    costo=implementoo.costo, cancha_id='', implementos_id=implemento,                    reserva_id=reserva)                implemento_res.save()                costo_implemento_res=costo_implemento_res+implementoo.costo            for cancha in cancha:                cancha=Cancha.objects.get(id=cancha)                cancha_res = DetalleReserva(                costo=cancha.precio,                cancha_id=cancha.id, implementos_id='',                reserva_id=reserva, fecha_inicio=fecha_inicio, fecha_fin=fecha_fin)                costo_cancha_res=costo_cancha_res+cancha.precio                cancha_res.save()            Reserva.objects.filter(id=reserva).update(costo_total=costo_implemento_res+costo_cancha_res)            return Response(serializer.data, status=status.HTTP_201_CREATED)        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)    def update(self, request, pk=None):        queryset = DetalleReserva.objects.all()        detalle_reserva = get_object_or_404(queryset, pk=pk)        serializer = DetalleReservaSerializer(detalle_reserva, data=request.data)        if serializer.is_valid():            serializer.save()            return Response(serializer.data)        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)    def delete(self, request, pk=None):        queryset = DetalleReserva.objects.all()        detalle_reserva = get_object_or_404(queryset, pk=pk)        detalle_reserva.delete()        return Response(status=status.HTTP_204_NO_CONTENT)